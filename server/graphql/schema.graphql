scalar Date

type User {
    id: ID!
    name: String
    situations:[Situation]
    edges:[Edge]
    moods: [Mood]
    thoughts: [Thought]
    customFeelings: [String]
}

type Mood {
    title: String!
    feelings: [String]!
    description: String!
    from: Date
    to: Date
}

type Thought {
    title: String!
    description: String!
    feelings: [String]!
    date: String!
}

type Place {
    id: String
    name: String
}

type Situation {
    title: String!
    description: String!
    place: Place!
    from: String
    to: String
    feelings:[String]
    edges: [EdgeOfLifeImpact]
    goalsModifiers: [Goal]
}

type Edge {
    id: String
    label:String
}

type EdgeOfLifeImpact {
    edge: String
    modifier: Int
}

type UserDate {
    thoughts: [Thought]
    situations: [Situation]
}

type Goal {
    id: String!
    title: String!
    description: String!
    starter_day: String
    modifiers: [GoalImpact]
}

type GoalImpact {
    goal: String,
    modifier: Int
}
# Query and mutations

type Query {
    "User by id"
    getUser( id: ID!): User
    "User custom feelings + standart feelings"
    getUserAvailableFeelings( id: ID!): [String]
    "User edges"
    getUserAvailableEdges( id: ID!): [Edge]
    "Get date"
    getDate( id: ID!, date: String): UserDate
    "User situtations"
    getUserSituations( id: ID!): [Situation]
    "User goals"
    getUserGoals(id: ID!): [Goal]
    "User goal"
    getUserGoal(id: ID!, goalId: ID!): Goal
}

input AddMoodInput {
    title: String!
    feelings: [String]!
    description: String!
    date: String
}

input EdgeInput {
    id: String!
    label:String!
}

input CreateEdgeInput {
    label:String!
}

input AddThoughtInput {
    title: String!
    feelings: [String]!
    edges: [EdgeInput]!
    description: String!
    date: String!
}

input PlaceInput {
    id: String
}

input GoalImpactInput {
    goal: String,
    modifier: Int
}

input AddSituationInput {
    title: String!
    description: String!
    place: PlaceInput!
    from: String!
    to: String
    feelings:[String]
    goalsModifiers: [GoalImpactInput]
}

input AddGoalInput {
    title: String!
    description: String!
    starter_day: String!
}

input AddCustomFeeling {
    feeling: String
}

type Mutation {
    "Add a mood"
    addMood(_id:ID!, input: AddMoodInput!): Mood
    "Add a thought"
    addThought(_id:ID!, input: AddThoughtInput!): Thought
    "Add custom feeling to the user"
    addCustomFeeling(_id:ID!, input: AddCustomFeeling!): String
    "Add a thought"
    createEdge(_id:ID!, input: CreateEdgeInput!): Edge
    "Add situation"
    addSituation(_id:ID!, input: AddSituationInput!): Situation
    "Add goal"
    addGoal(_id:ID!, input: AddGoalInput!): Goal
}